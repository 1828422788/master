@dltable @dltable0
Feature: download_table下载part0

  Background:
    Given open the "splSearch.SearchPage" page for uri "/search/"
    And I wait for element "SearchStatus" change text to "搜索完成!"

  Scenario Outline: 下载table用例结果
    Given I set the parameter "SearchInput" with value "<splQuery>"
    And I click the "DateEditor" button
    And I click the "Today" button
    And I click the "SearchButton" button
    And I wait for "2000" millsecond
    And I wait for element "SearchStatus" change text to "搜索完成!"

    And I wait for "2000" millsecond
    And I wait for "downloadButton" will be visible
    Then take a screenshot with name "spldownload/<name>"
    Then I click the "downloadButton" button
    Then I set the parameter "DownloadName" with value "<name>"
    Then I set the parameter "MaxLineNum" with value "100"
#    Then I choose the "<unit>" from the "MaxLineDropdown"
    Then I choose the "CSV" from the "DocumentTypeList"
    Then I choose the "UTF" from the "DocumentEncodeList"
    Then I click the "CreateDownloadTask" button
#    And I wait for "2000" millsecond
#    Then I will see the success message "提交成功，请到设置-下载管理页查看下载状态！"

    #下载到本地
    Given open the "splSearch.OfflineTaskPage" page for uri "/download/#"
    When I set the parameter "DbListPageSearchInput" with value "<name>.csv"
    And I wait for "2000" millsecond
    Given the data name is "<name>.csv" then i click the "下载" button

    Examples: 新建成功
      | name                                                   | splQuery|
       #正常结果
      | fillnull_string_to_resplen_sample | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424 AND apache.resp_len:* \| sort by apache.x_forward \| limit 10 \| fillnull value=\"66\" apache.resp_len \| eval t_apache.resp_len = typeof(apache.resp_len) \| table apache.resp_len, t_apache.resp_len, apache.x_forward |
      | eval_noempty_logic_and | tag:sample04061424 \| eval bool_is_empty=empty(apache.request_path) \| eval bool_not_empty=! empty(apache.request_path) \| eval bool_is_false= false && empty(apache.request_path) \| table bool_is_empty, bool_not_empty,bool_is_false, apache.x_forward \| sort by  apache.x_forward |
      | eval_relation | tag:sample04061424 \| eval r1_not200=apache.status!=200 \| eval r2_is200=apache.status==200 \| eval r3_big200=apache.status>200 \| eval r4_bigequal200=apache.status>=200 \| eval r5_small200=apache.status<200 \| eval r6_smallequal200=apache.status<=200 \| table r1_not200,r2_is200,r3_big200, r4_bigequal200,r5_small200,r6_smallequal200,apache.status \| sort by apache.status |
      | eval_connect_table_sort | tag:sample04061424 \| eval ret_connect = appname + apache.clientip + apache.method + \"科罗拉多斯普林斯\"  \| table ret_connect \| sort by ret_connect |
      | eval_math_add_bracket | tag:sample04061424 \| eval r_len=apache.resp_len \| eval r_status=apache.status \| eval status_add10=apache.status+10 \| eval r_plus=apache.resp_len+apache.status \| eval r_plus_bracket=(apache.resp_len+apache.status)*r_status \| table r_len, r_status,status_add0, r_plus, r_plus_bracket, apache.x_forward \| sort by  apache.x_forward |
      | eval_ceil_floor_min_max_log | tag:sample04061424_json_sdyd_41 \| sort by json.purePathId \| limit 10 \|  eval r_ceil_cpuTime=ceil(json.cpuTime) \| eval r_floor_cpuTime=floor(json.cpuTime) \| eval r_min=min(json.execTime,json.responseTime) \| eval r_max=max(json.execTime,json.responseTime) \| eval r_log_responseTime=log(json.responseTime) \| table json.cpuTime, json.execTime, json.responseTime, r_ceil_cpuTime, r_floor_cpuTime, r_min, r_max, r_log_responseTime, json.purePathId |
      | eval_coalesce_sample | tag:sample04061424 \| eval ret_path=coalesce(apache.request_path,apache.referer) \| table ret_path, apache.x_forward \| sort by  apache.x_forward |
      | eval_empty_sample | tag:sample04061424 \| eval path_is_empty=empty(apache.referer_domain) \| table path_is_empty, apache.referer_domain, apache.x_forward \| sort by  apache.x_forward |
      | eval_empty_resp_len | tag:sample04061424 \| eval path_is_empty=empty(apache.resp_len) \| table path_is_empty, apache.x_forward \| sort by  apache.x_forward |
      | eval_2if | tag:sample04061424 \| eval ret_equal200=if(apache.status==200,\"equal200\",\"not_200\") \| eval ret_larger=if(apache.status>200,\"larger200\",\"not larger\") \| table apache.status, ret_equal200, ret_larger, apache.x_forward \| sort by  apache.x_forward |
      | eval_math_stats | tag:sample04061424 \| eval new_len = 1000 + apache.resp_len \| stats count(new_len) |
      | eval_case_stats_count | (logtype:apache AND tag:sample04061424) \| eval desc=case(apache.resp_len<0,\"nagetive\",apache.resp_len<100,\"low\",apache.resp_len>2000,\"high\",empty(apache.resp_len),\"Not found\",default,\"middle\") \| stats count(desc) by desc |
      | eval_tolong | (logtype:apache AND tag:sample04061424) \| eval int_status= tolong(apache.status) \| table int_status, apache.x_forward \| sort by  apache.x_forward |
      | eval_if_nest_empty_top | tag:sample04061424 \| eval len=if(empty(apache.resp_len),0,1) \| stats top(len,10) |
      | eval_empty_if_where | tag:sample04061424 \| eval is_resplen_empty=empty(apache.resp_len) \| eval res_str=if(is_resplen_empty,\"repslen_empty\",\"resplen_non_null\") \| table apache.resp_len, is_resplen_empty, res_str \| where is_resplen_empty==true |
      | add_1 | tag:sample04061424 AND apache.resp_len:>2000 \| eval resplen=apache.resp_len \| eval status=apache.status \| eval mid=apache.resp_len+apache.status \| eval res_mul=(apache.resp_len+apache.status)*apache.status \| table resplen, status, mid, res_mul, apache.x_forward \| sort by  apache.x_forward |
      | eval_logical_or | tag:sample04061424 \| eval input_true=true \| eval input_false=false \| eval ret_true=input_false \|\| input_true \| table ret_true, apache.x_forward \| sort by  apache.x_forward |
      | eval_logical_and | tag:sample04061424 \| eval input_true=true \| eval input_false=false \| eval ret_false=input_false && input_true \| table ret_false, apache.x_forward \| sort by  apache.x_forward |
      | eval_empty_logical_or_and | tag:sample04061424_json_sdyd_float_59 \| eval res_empty=empty(json.cpuTime) \| eval res_not_empty=!empty(json.cpuTime) \| eval res_true=empty(json.cpuTime) \|\| true \| eval res_false= false && empty(json.cpuTime) \| table json.cpuTime, res_empty, res_not_empty, res_true, res_false, json.purePathId \| sort by json.purePathId |
      | eval_comparison_operation | tag:sample04061424 AND NOT apache.status:200 \| eval not_200=apache.status!=200 \| eval is_200=apache.status==200 \| eval big_200=apache.status>200 \| eval bigto_200=apache.status>=200 \| eval small_200=apache.status<200 \| eval smallto_200=apache.status<=200 \| eval res_equal_200=if(apache.status==200,\"equal200\",\"other200\") \| eval res_not_200=if(apache.status!=200,\"not200\",\"error\") \| table apache.status, not_200, is_200, big_200, bigto_200,small_200,smallto_200, res_equal_200,res_not_200, apache.x_forward \| sort by  apache.x_forward |
      | eval_abs_ceil_floor | tag:sample04061424_json_sdyd_float_59 \|  eval r_abs=abs(json.duration) \| eval r_ceil=ceil(json.duration) \| eval r_floor=floor(json.duration) \| table json.duration,r_abs, r_ceil, r_floor, json.purePathId \| sort by json.purePathId |
      | eval_min_max_float | tag:sample04061424_json_sdyd_41 \| eval r_min=min(json.execTime,json.responseTime) \| eval r_max=max(json.execTime,json.responseTime) \| eval r_log_time=log(r_max) \| sort by r_max \| table json.execTime, json.responseTime, r_max, r_min, r_log_time, json.purePathId \| sort by json.purePathId |
      | eval_min_max_int | tag:sample04061424 AND apache.resp_len:* \| eval res_min=min(apache.status, apache.resp_len) \| eval res_max=max(apache.status,apache.resp_len) \| table res_min, res_max, apache.x_forward \| sort by  apache.x_forward |
      | eval_log_status | tag:sample04061424 \| eval r_log_status=log(apache.status) \| table apache.status, r_log_status, apache.x_forward \| sort by  apache.x_forward |
      | eval_len_sdyd_json_name | tag:sample04061424_json_sdyd_41 \| eval r_name_len=len(json.name) \| eval r_ip_len=len(json.dimensions.IP) \| table json.name, r_name_len, json.dimensions.IP, r_ip_len, json.purePathId \| sort by json.purePathId |
      | eval_case_default | tag:sample04061424 AND NOT apache.status:200 \| eval r_status = \"status: \" + case(apache.status==200, \"ok\", apache.status==400, \"bad\", apache.status>=500, \"other\", default, \"error\") \| table apache.status, r_status, apache.x_forward \| sort by  apache.x_forward |
      | eval_case_status | tag:sample04061424 \| eval res_status=case(apache.status==200,\"status=200\",apache.status==404,\"apache=404\",apache.status==500,\"apache==500\",default,\"apache=other\") \| table apache.status,res_status, apache.x_forward \| sort by  apache.x_forward |
      | eval_case_stats | tag:sample04061424 AND apache.status:>=301 \| eval r_status=case(apache.status==200,\"status=200\",apache.status<=301,\"apache<=301\",apache.status==304,\"apache==304\",default,\"apache=other\") \| table r_status, apache.x_forward \| sort by  apache.x_forward |
      | eval_case_param | tag:sample04061424 OR  tag:sample04061424_json_sdyd_41 \| eval r_len=case(logtype==\"json\", json.cpuTime, logtype==\"apache\", apache.resp_len) \| sort by r_len \| table r_len |
      | eval_upper_lower | tag:sample04061424 AND apache.request_path:* \| eval r_upper=upper(apache.request_path) \| eval r_lower=lower(apache.request_path) \| table r_upper, r_lower, apache.x_forward \| sort by  apache.x_forward |
      | eval_match_clientip1 | tag:sample04061424 \| eval ret_match = match(apache.clientip, \"^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$\") \| table apache.clientip, ret_match, apache.x_forward \| sort by  apache.x_forward |
      | eval_match_sample_query | tag:sample04061424 AND apache.request_query:* \| eval r_match1 = match(apache.request_query, \"b.*e\") \| eval r_match2 = match(apache.request_query, \"^bcd\") \| table r_match1, r_match2, apache.x_forward \| sort by  apache.x_forward |
      | eval_substring_trim | tag:sample04061424 AND apache.referer_domain:* \| eval r_subdomain= substring(apache.referer_domain,0,len(apache.referer_domain)) \| eval r_trim=trim(\"中文 \") \| eval r_eng=trim(\" \"+apache.referer_domain + \" \") \| table r_subdomain, r_eng, r_trim, apache.x_forward \| sort by  apache.x_forward |
      | eval_str_tolong | tag:sample04061424 \| eval res_to_str=tolong(\"123\")\| eval res_to_long=tolong(20.3) \| table res_to_str, res_to_long, apache.x_forward \| sort by  apache.x_forward |
      | eval_todouble | tag:sample04061424 \| eval r_frm_str=todouble(\"123.1\")  \| eval r_frm_long = todouble(20) \| eval res=r_frm_str+20\| eval t_frm_str = typeof(r_frm_str) \| eval t_frm_long = typeof(r_frm_long) \| eval t_res = typeof(res) \| table r_frm_str, t_frm_str, r_frm_long,t_frm_long, res,t_res, apache.x_forward \| sort by  apache.x_forward |
      | eval_typeof_json_string | tag:sample04061424_json_sdyd_41 \| eval t_actionName=typeof(json.actionName) \| eval t_dimensions_ip=typeof(json.dimensions.IP) \| table json.actionName, t_actionName, json.dimensions.IP, t_dimensions_ip \| sort by json.purePathId |
      | eval_typeof_1 | tag:sample04061424_json_sdyd_41 \| eval t_cputime = typeof(json.cpuTime) \| eval t_failed=typeof(json.failed) \| eval t_agent_timestamp=typeof(agent_send_timestamp) \| eval t_dimensions = typeof(json.dimensions) \| table json.cpuTime, t_cputime, json.failed, t_failed, json.agent_send_timestamp, t_agent_timestamp, t_dimensions, json.purePathId \| sort by json.purePathId |
      | eval_typeof_2 | tag:sample04061424 \| eval t_timestamp = typeof(timestamp) \| eval t_context_id = typeof(context_id) \| eval t_x_forward = typeof(apache.x_forward) \| eval t_latitude = typeof(apache.geo.latitude) \| eval t_resp_len = typeof(apache.resp_len) \| eval t_status = typeof(apache.status) \| table t_timestamp,t_context_id,t_x_forward,t_latitude,t_resp_len, t_status, apache.x_forward \| sort by  apache.x_forward |
      | eval_tostring | tag:sample04061424 \| eval t = \"logtype:\" + logtype \| where tostring(t) == \"logtype:apache\" && tostring(apache.clientip) == \"23.166.125.53\" && tostring(appname) == \"apache\" \| table apache.clientip, appname, t, apache.x_forward \| sort by  apache.x_forward |
      | eval_parsedate | tag:sample04061424 apache.method:GET \| eval x = parsedate(\"28/04/2016:12:01:01\",\"dd/MM/yyyy:HH:mm:ss\") \| eval y = parsedate(\"28/04/2016\",\"dd/MM/yyyy\") \| table x,y, apache.x_forward \| sort by  apache.x_forward |
      | eval_parsedate_chinese_month | tag:sample04061424 apache.method:GET \| eval t_chn = parsedate(\"28/四月/2016\", \"dd/MMMM/yyyy\", \"Asia/Shanghai\", \"zh\") \| table t_chn, apache.x_forward \| sort by  apache.x_forward \| eval f_t_chn = formatdate(t_chn) |
      | formatdate_sample | tag:sample04061424 apache.method:GET \| eval r_formatdate = formatdate(1537414676598, \"HH:mm:ss:SSS MM/dd/yyyy\") \| table apache.resp_len, r_formatdate, apache.x_forward \| sort by  apache.x_forward |
      | parsedate_limit | tag:sample04061424 AND 'apache.resp_len':5049 \| limit 10 \| eval f_start_time = \"2014-08-02 10:52:22.000\" \| eval f_end_time = \"2046-12-29 10:52:22.000\" \| eval mill_start_time=parsedate(f_start_time,\"yyyy-MM-dd HH:mm:ss.SSS\") \| eval mill_end_time = parsedate(f_end_time,\"yyyy-MM-dd HH:mm:ss.SSS\") \| table f_start_time, f_end_time, mill_start_time, mill_end_time, apache.x_forward \| sort by  apache.x_forward |
      | eval_isnum_isstr | tag:sample04061424 \| eval r_isnum = isnum(apache.status) \| eval r_isstr = isstr(apache.method) \| table r_isnum, r_isstr, apache.x_forward \| sort by  apache.x_forward |
      | relative_time_timestamp_data_math | tag:sample04061424 \| eval cur_timestamp=1589212800000 \| eval r_relative = relative_time(cur_timestamp, \"-1d/d\") \| eval r_format_relative = formatdate(r_relative, \"HH:mm:ss:SSS MM/dd/yyyy\") \| eval r_format_timestamp = formatdate(cur_timestamp, \"HH:mm:ss:SSS MM/dd/yyyy\") \| table r_relative, r_format_relative, apache.x_forward \| sort by  apache.x_forward |
      | cidrmatch | tag:sample04061424 \| eval r_m130 = cidrmatch(\"192.168.1.130/25\", \"192.168.1.129\") \| eval r_m128 = cidrmatch(\"192.168.1.128/25\", \"192.168.1.129\") \| eval r_m255 = cidrmatch(\"192.168.1.255/25\", \"192.168.1.129\") \| table r_m130, r_m128, r_m255, apache.x_forward \| sort by  apache.x_forward |
      | eval_urldecode | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424_urldecode_apache_10 AND apache.request_query:* \| eval r_decode = urldecode(apache.request_query) \| table apache.request_query,r_decode, apache.x_forward \| sort by  apache.x_forward |
      | eval_stats1 | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424 \| eval method = apache.method \| stats count() as count1, avg(apache.resp_len) as avg_len by method, apache.status \| sort by -avg_len |
      | rename_status | tag:sample04061424 \| rename apache.status as \"status_1\" \| table apache.status,status_1, apache.x_forward \| sort by  apache.x_forward |
      | rename_status_to_chinese | index=* starttime=\"now/d\" endtime=\"now/d+24h\"  tag:sample04061424 \| rename apache.status as \"状态码\" \| table '状态码', apache.x_forward \| sort by  apache.x_forward |
      | rename_status_to_chinese_single_quotation | tag:sample04061424 \| rename apache.status as 'tt.状态码' \| eval ret_a =  'tt.状态码'  \| eval ret_typeof= typeof('tt.状态码') \| table  ret_typeof, 'tt.状态码' |
      | rename_apache_table2all_fields2test_sort | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424 \| rename apache.* as test.* \| table * \| fields test.* \| fields test.clientip, test.resp_len, test.status, test.x_forward, test.request_query \| sort by test.x_forward, test.clientip |
      | table_sample | starttime=\"now/d\" endtime=\"now/d+7h\" tag:sample04061424_apachesample_dawn \| eval new_time=formatdate(timestamp, \"HH:mm:ss\") \| table apache.status,apache.method,new_time |
      | table_result_seq | tag:sample04061424 \| table appname, tag, apache.clientip, apache.geo.country, apache.request_path, apache.status, apache.resp_len, apache.method, apache.x_forward \| sort by  apache.x_forward |
      | parse_message2ip_count2tag | tag:sample04061424 \| parse \"^(?<ip_addr>\d+\.\d+\.\d+\.\d+)\" \| eval ip_str = \"ip:\" + ip_addr \| stats count(tag) as app_cnt by ip_str \| sort by app_cnt,ip_str |
      | parse_clientip_stats | tag:sample04061424 \| parse field=apache.clientip \"(?<ip_addr>\d+\.\d+\.\d+\.\d+)\" \| eval ip_str = \"ip:\" + ip_addr \| stats count(appname) as app_cnt by ip_str \| sort by app_cnt,ip_str |
      | parse_request_path_stats | tag:sample04061424 \| parse field=apache.request_path \"^(?<outer_path>/[^/]*)\" \| stats count(appname) by outer_path |
      | parse_sample_to_table | tag:sample04061424 AND apache.x_forward:7* \| parse \"(?<digital_list>\d+)\" max_match=5 \| table digital_list, apache.x_forward \| sort by  apache.x_forward |
      | parse_digital_max_match15 | tag:sample04061424 AND  apache.x_forward:1\| parse \"(?<digital_list>\d+)\" max_match=15 \|  table digital_list, apache.x_forward |
      | parse_digital_match_default | tag:sample04061424 \| parse \"(?<digital>\d+)\" \| eval ret_str = \"digital:\" + digital  \| table ret_str, apache.x_forward \| sort by  apache.x_forward |
      | parse_request_path_stats_count_by | tag:sample04061424 \| parse field=apache.request_path \"^(?<outer_path>/[^/]*)\" \| stats count(appname) by outer_path |
      | parse_first_chinese_char_to_table | tag:sample04061424_chinese_5 \| parse field=raw_message \"(?<first_chinese_char>[\\u4e00-\\u9fa5])\" \| table first_chinese_char |
      | parse_chinesechar_maxmatch10_exceed_rawlen | tag:sample04061424_chinese_5 \| limit 1 \| parse field=raw_message \"(?<first_chinese_char>[\\u4e00-\\u9fa5])\" max_match=10 \| table first_chinese_char |
      | parse_request_path_table | tag:sample04061424  \| parse field=apache.request_path \"(?<digital>[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(/.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+/.?)\" \| table apache.request_path, digital, apache.x_forward \| sort by  apache.x_forward |
      | eval_formatdate_2y_4m | \| makeresults count=1 \| eval cur_timestamp = 1570738470000 \| eval ret_time = formatdate(cur_timestamp,\"yy-MMMM-dd HH:mm:ss.SSS ZZ Z z\") \| eval splittime = split(ret_time, \" \") \| eval splittime_name = split(\"日期 时间 RFC时区1 RFC时区2 通用时区\", \" \") \| eval r_display = mvszip(splittime_name,splittime ,\"：\") \| table r_display |
      | eval_formatdate_1570738470000 | \| makeresults count=1 \| eval cur_timestamp = 1570738470000 \| eval ret_time = formatdate(cur_timestamp,\"yyyy-MM-dd HH:mm:ss.SSS ZZZ Z z '' G CC xxxx ww e '' EEEE DDD aa KK hh '' kk\") \| eval splittime = split(ret_time, \" \") \| eval splittime_name = split(\"日期 时间 RFC时区1 RFC时区2 通用时区 ' 公元 Centryofera WeekYear WeekofYear DayofWeek ' DayofWeek1 DayinYear Halfofday0_11 Clockhourofhalfday1_12 Hourofhalfday ' Hourinday1_24 \", \" \") \| eval r_display = mvszip(splittime_name,splittime ,\"：\") \| table r_display |
      | eval_formatdate_1570813200000 | \| makeresults count=1 \| eval cur_timestamp = 1570813200000 \| eval ret_time = formatdate(cur_timestamp,\"yyyy-MM-dd HH:mm:ss.SSS ZZZ Z z '' G CC xxxx ww e '' EEEE DDD aa KK hh '' kk\") \| eval splittime = split(ret_time, \" \") \| eval splittime_name = split(\"日期 时间 RFC时区1 RFC时区2 通用时区 ' 公元 Centryofera WeekYear WeekofYear DayofWeek ' DayofWeek1 DayinYear Halfofday0_11 Clockhourofhalfday1_12 Hourofhalfday ' Hourinday1_24 \", \" \") \| eval r_display = mvszip(splittime_name,splittime ,\"：\") \| table r_display |
      | eval_formatdate_1570888800000 | \| makeresults count=1 \| eval cur_timestamp = 1570888800000 \| eval ret_time = formatdate(cur_timestamp,\"yyyy-MM-dd HH:mm:ss.SSS ZZZ Z z '' G CC xxxx ww e '' EEEE DDD aa KK hh '' kk\") \| eval splittime = split(ret_time, \" \") \| eval splittime_name = split(\"日期 时间 RFC时区1 RFC时区2 通用时区 ' 公元 Centryofera WeekYear WeekofYear DayofWeek ' DayofWeek1 DayinYear Halfofday0_11 Clockhourofhalfday1_12 Hourofhalfday ' Hourinday1_24 \", \" \") \| eval r_display = mvszip(splittime_name,splittime ,\"：\") \| table r_display |
      | rename_sample | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424 \| rename apache.resp_len as resp_len, apache.status as status, apache.clientip as clientip \| table resp_len, status, clientip \| sort by resp_len, clientip, status |
      | rename_apache_limit_avg | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424 \| rename apache.* as * \| limit 5 \| stats avg(resp_len) as avg_len by status |
      | rename_apache_avg_bystatusip_sort | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424 \| rename apache.* as * \| stats avg(resp_len) as avg_len by status, clientip \| sort by avg_len, status, clientip |
      | rename_apache_formatdate_bucket_span1_count | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424_display \| rename apache.c* as * \| eval f_timestamp = formatdate(timestamp,\"HH\")\| eval u_hour=tolong(f_timestamp) \| bucket u_hour span=1 as ts \| stats count(lientip) as c_ip by ts |
      | rename_multi_fields_apache_plus | tag:sample04061424 \| rename apache.geo.* as *, apache.r* as r* \| table referer_domain, apache.clientip, resp_len, request_path, apache.x_forward \| sort by apache.x_forward |
      | search_field_range | tag:sample04061424 AND apache.status:[300 TO *] \| sort by apache.x_forward \| limit 10 \| table apache.status |
      | search_field_larger | tag:sample04061424 AND apache.status:>300\| sort by apache.x_forward \| limit 10 \| table apache.status |
      | search_field_noless | tag:sample04061424 AND apache.status:>=300\| sort by apache.x_forward \| limit 10 \| table apache.status |
      | filldown_stats_math_sort_limit_eval | (logtype:apache AND tag:sample04061424) \| stats count(tag) as event_count,sum(apache.resp_len) as sum_len,max(apache.resp_len) as max_len,min(apache.resp_len) as min_len by apache.clientip\|sort by sum_len \| limit 5 \| eval avg_len=if(event_time==0,0,sum_len/event_time) \| filldown avg_len |
      | filldown_eval_case_default | tag:sample04061424 AND apache.status:>404 \| eval x_forward=apache.x_forward \| eval r_status = \"status: \" + case(apache.status==200, \"ok\", apache.status==400, \"bad\", apache.status>=500, \"other\", default, \"error\") \| table apache.status, r_status, x_forward \| sort by  x_forward \| filldown x_forward |
      | filldown_domain | (tag:sample04061424 AND NOT apache.referer_domain:*) OR  apache.referer_domain:w25.100msh.com \| sort by apache.referer_domain \| limit 10 \| eval referer_domain = apache.referer_domain \| table referer_domain \| filldown referer_domain |
      | filldown_chinese | tag:sample04061424 \| sort by apache.status \| limit 10 \|  eval newfield = if(apache.status<501, null,\"中文\") \| table newfield \| filldown newfield |
      | download_cnt_clientip_bystatus_csv_sample | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424_chart \| chart count() over apache.clientip by apache.status \| download filename=\"download_cnt_clientip_bystatus_csv_sample\" fileformat=\"csv\" |
      | rare_showperc_resplen_sample | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424 \| sort by apache.x_forward \| limit 10 \| rare apache.resp_len showperc=false by apache.status |
      | rare_countfield_resplen_sample | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424 \| rare apache.resp_len countfield=ret1 by apache.status |
      | entropy_sample | tag:sample04061424 AND apache.referer_domain:* \| parse field=apache.referer_domain \"^(?<subdomain>.*?)\.(?<domain>\w+\.\w+)$\" \| eval entr=entropy(subdomain) \| stats avg(entr),dc(subdomain),values(subdomain) by domain |
      | chart_sample_noparam | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424 \| chart max(apache.status) as ma count() as cnt |
      | chart_sample_over_status | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424 \| chart count() as cnt over apache.status span=\"50\" |
      | chart_sample_over_resp_len | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424 \| chart count() over apache.resp_len span=\"500\" by apache.method |
      | chart_cont_false_overstatus_span50 | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424 \| chart cont=false count() as cnt over apache.status span=\"50\" |
      | chart_cont_true_overstatus_span50 | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424 \| chart cont=true count() as cnt over apache.status span=\"50\" |
      | chart_cont_false_overstatus_span50_bymethod | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424 \| chart cont=false count() as cnt over apache.status span=\"50\" by apache.method |
      | chart_cont_true_overstatus_span50_bymethod | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424 \| chart cont=true count() as cnt over apache.status span=\"50\" by apache.method |
      | chart_overresplen_bins10_span50 | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424 \| chart sep=\"-sep分格-\" format=\"$AGG\|format分格\|$VAL\" cont=true count() as cnt over apache.resp_len bins=10 span=\"50\" |
      | chart_multi_params_by_resplen_span1000_bins5_endindex2 | starttime=\"now/d\" endtime=\"now/d+24h\" tag:\"sample04061424_display\" \| chart count() over apache.status span=\"200\" by apache.resp_len span=\"1000\"  bins=5  startindex=0 endindex=2 |
      | fillnull_string_to_null_resplen_sample | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424 AND NOT apache.resp_len:* \| fillnull value=\"66\" apache.resp_len \| eval type_apache.resp_len = typeof(apache.resp_len) \| table apache.resp_len, type_apache.resp_len, apache.x_forward \| sort by apache.x_forward |
      | fillnull_string_to_resplen_sample | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424 AND apache.resp_len:* \| sort by apache.x_forward \| limit 10 \| fillnull value=\"66\" apache.resp_len \| eval t_apache.resp_len = typeof(apache.resp_len) \| table apache.resp_len, t_apache.resp_len, apache.x_forward |
      | fillnull_string_to_domain | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424 AND NOT apache.referer_domain:*  \| sort by apache.x_forward \| limit 10 \| fillnull value=\"fillnull_source\" apache.referer_domain \| eval type_referer_domain = typeof(apache.referer_domain) \| table apache.referer_domain, apache.referer_domain,type_referer_domain, apache.x_forward |
      | fillnull_fill_data_to_datavalue | tag:sample04061424 \| sort by apache.x_forward \| limit 10 \| eval cur_param1=null, cur_param2=0 \| fillnull value=\"1234567\" cur_param1 \| fillnull value=\"789\" cur_param2 \|  eval t_cur_param1=typeof(cur_param1), t_cur_param2=typeof(cur_param2) \| table apache.x_forward, cur_param1, cur_param2, t_cur_param1, t_cur_param2 |
      | fillnull_fill_string_to_noexitparam | tag:sample04061424 \| sort by apache.x_forward \| limit 10 \| fillnull value=\"1234567\" cur_param \|  eval t_cur_param=typeof(cur_param) \| table cur_param, t_cur_param |
      | fillnull_fill_string_to_string | tag:sample04061424 \| sort by apache.x_forward \| limit 10 \| eval cur_param=\"tmp_string\" \| fillnull value=\"1234567\" cur_param \|  eval t_cur_param=typeof(cur_param) \| table cur_param, t_cur_param |
      | eventstats_sample_cnt | tag:sample04061424 \| sort by apache.x_forward \| limit 10  \| eventstats  count() as cnt \| fields cnt \| table cnt |
      | eventstats_sample_avglen | tag:sample04061424  \| where apache.resp_len > 100 &&  apache.resp_len < 500 \| eventstats  avg(apache.resp_len) as avglen \| table apache.resp_len, avglen |
      | tonumber_hex_trim_sample | tag:sample04061424 \| limit 1 \| eval ret1=tonumber(\"123.45\")  \| eval ret2=tonumber(\"0A4\",16) \| eval ret3=tonumber(trim(\"                234.123     \")) \| table ret1, ret2, ret3 |
      | appendcols_override_false_sample | tag:sample04061424_display \| stats count() as cnt  \| appendcols override=false maxout=10 [[ tag:sample04061424 \| stats count() as cnt]] |
      | appendcols_override_true_sample | tag:sample04061424_display \| stats count() as cnt \| appendcols override=true maxout=10 [[ tag:sample04061424 \| stats count() as cnt]] |
      | appendcols_override_index1 | tag:sample04061424 \| stats count(apache.clientip)  \| appendcols [[ index=*  tag:sample04061424_display \| stats count(apache.clientip) ]] |
      | appendcols_override_index2 | tag:sample04061424 \| stats count(apache.clientip)  \| appendcols override=true  [[ index=*  tag:sample04061424_display \| stats count(apache.clientip) ]] |
      | kvextract_request_query_sample | tag:sample04061424 \| sort by -apache.x_forward \| limit 3 \| kvextract apache.request_query clean_keys=true pairdelim=\"&\" kvdelim=\"=\" \| table gw_address, gw_id, gw_port, mac, url |
      | kvextract_request_query_table | tag:sample04061424 \| sort by -apache.x_forward \| limit 10 \| kvextract apache.request_query pairdelim=\"&\" kvdelim=\"=\" \| table apache.status, apache.resp_len, gw_address, gw_port |
      | kvextract_xiaomi_jsonurl | tag:sample04061424_xiaomi_3 \| kvextract json.url pairdelim=\"&\" kvdelim=\"=\" \| table stamp, props |
      | kvextract_h3c_parse_msg | tag:sample04061424_h3c_kv_1 \| parse field=raw_message \"(?<message>DEV_TYPE[\S+\s+]+)rule_ID(?<message1>[\S+\s+]+)\" \| fields message \| kvextract message pairdelim=\";\" kvdelim=\"=\" \| fields -message \| table * |
      | kvextract_h3c_parse_msg_clean_keys_true | tag:sample04061424_h3c_kv_1 \| parse field=raw_message \"(?<message>DEV_TYPE[\S+\s+]+)rule_ID(?<message1>[\S+\s+]+)\" \| fields message \| kvextract message clean_keys=true pairdelim=\";\" kvdelim=\"=\" \| fields -message \| table * |
      | kvextract_h3c_parse_msg_limit3 | tag:sample04061424_h3c_kv_1 \| parse field=raw_message \"(?<message>DEV_TYPE[\S+\s+]+)\" \| fields message \| kvextract message pairdelim=\";\" kvdelim=\"=\" limit=3 \| fields -message \| table * |
      | kvextract_h3c_parse_msg_maxchars_50 | tag:sample04061424_h3c_kv_1 \| parse field=raw_message \"(?<message>DEV_TYPE[\S+\s+]+)\" \| fields message \| kvextract message maxchars=50 pairdelim=\";\" kvdelim=\"=\" \| fields -message \| table * |
      | kvextract_h3c_parse_msg_mv_add_true | tag:sample04061424_h3c_kv_1 \| eval message=\"a:[1,1,1]\" \| kvextract message mv_add=true pairdelim=\";\" kvdelim=\":\"  \| table a |
      | eval_path_xml_body | tag:xml_sample_1 \| xpath input=raw_message output=xmlbody path=\"/note/body\" \| table xmlbody |
      | eval_path_xml_heading_sample | tag:xml_sample_1 \| xpath input=raw_message output=xmlheading path=\"/note/heading\" \| table xmlheading |
      | mv_split_sample | tag:sample04061424 \| eval m_ips=split(apache.clientip, \".\") \| eval m_paths=split(apache.request_path, \"/\") \| table m_ips, m_paths |
      | mv_where_split | tag:sample04061424 \| where !empty(apache.request_query) \| eval m_querys = split(apache.request_query, \"=\") \| table m_querys,apache.request_query |
      | mvcount | tag:sample04061424 \| eval m_ips=split(apache.clientip, \".\") \| eval m_paths=split(apache.request_path, \"/\") \| eval m_ips_count = mvcount(m_ips) \| eval m_paths_count = mvcount(m_paths)  \| table m_ips, m_paths,m_ips_count, m_paths_count |
      | mvappend_sample | tag:sample04061424 \| eval fullName=mvappend(apache.clientip, \"middle value\", apache.method) \| table apache.clientip, apache.method,fullName |
      | mvappend | tag:sample04061424 \| eval m_ips=split(apache.clientip, \".\") \| eval m_paths=split(apache.request_path, \"/\") \| eval m_ips_count = mvcount(m_ips) \| eval m_paths_count = mvcount(m_paths)  \| eval r_count_append=mvappend('m_ips_count', 'm_paths_count') \| table m_ips_count, m_paths_count, r_count_append |
      | mvjoin_sample | tag:sample04061424 \| eval m_ips=split(apache.clientip, \".\") \| eval m_ips_join = mvjoin(m_ips, \", \") \| table m_ips,m_ips_join |
      | mv_msort_sample | tag:sample04061424 \| eval m_ips=split(apache.referer_domain, \".\") \| eval r_mvsort= mvsort(m_ips) \| table m_ips, r_mvsort \| sort by +apache.x_forward |
      | mv_msort_int | tag:sample04061424 \| eval m_ips=split(apache.clientip, \".\") \| eval r_mvsort= mvsort(m_ips) \| table m_ips, r_mvsort \| sort by +apache.x_forward |
      | mvzip_sample | tag:sample04061424 \| eval m_ips=split(apache.clientip, \".\") \| eval m_paths=split(apache.request_path, \"/\") \| eval r_zips = mvzip(m_ips,m_paths) \| eval zips_count = mvcount(r_zips) \| table m_ips, m_paths, r_zips, zips_count |
      | mvzip_sample1 | tag:sample04061424 \| eval m_ips=split(apache.clientip, \".\") \| eval m_paths=split(apache.request_path, \"/\") \| eval r_zips = mvzip(m_ips,m_paths) \| eval zips_count = mvcount(r_zips) \| eval zips_idx=mvindex(r_zips,2) \| table m_ips, m_paths, r_zips, zips_count,zips_idx |
      | mvrange_sample | tag:sample04061424 \| eval base=mvrange(1,6) \| table base |
      | mv_mvrange_step_add2 | tag:sample04061424 \| eval base=mvrange(1,6,2) \| table base |
      | mvrange_step_minus | tag:sample04061424 \| eval base=mvrange(10,2,-3) \| table base |
      | map_sample5 | tag:sample04061424 \| stats count() as cnt by apache.clientip \| limit 7 \| rename apache.clientip as clientip \| sort by cnt, clientip  \| map \"apache.clientip:$clientip$ \| stats max(apache.resp_len) as max_len \" |
      | map_stats_two_fields_rename_clientip | tag: sample04061424 \| stats count() by apache.clientip, apache.resp_len \| fields apache.clientip, apache.resp_len \| rename apache.clientip as src_ip \| map \"raw_message:$src_ip$\" \| fields hostname, appname, raw_message |
      | map_sample_maxsearches | tag:sample04061424 \| stats count() by apache.clientip \| limit 5 \| rename apache.clientip as clientip \| map\"apache.clientip:$clientip$ \| stats max(apache.resp_len)\" maxsearches=3 |
      | map_sample3 | tag:sample04061424 \| stats max(timestamp) as max_time \| eval start=max_time-5*3600000 \| eval start_f = formatdate(tolong(start), \"yyyy-MM-dd:HH:mm:ss\") \| eval end_f = formatdate(tolong(max_time+3600000), \"yyyy-MM-dd:HH:mm:ss\")  \|  map \" starttime=$start_f$ endtime=$end_f$ tag:sample04061424  AND /0{2,2}/ \" \| table apache.resp_len, apache.status |
      | map_sample_table | tag:\"sample04061424_chart\" \| stats max(timestamp) as max_time, min(timestamp) as min_time \| eval start_f = formatdate(tolong(min_time-1000*3), \"yyyy-MM-dd:HH:mm:ss\")  \| eval end_f = formatdate(tolong(max_time+90000), \"yyyy-MM-dd:HH:mm:ss\") \| map \" starttime=$start_f$ endtime=$end_f$ tag:\"sample04061424_chart\"  \" \| table start_f, end_f, tag, apache.clientip, apache.resp_len, apache.x_forward \| sort by apache.x_forward, apache.clientip |
      | map_stats | tag:sample04061424  \| table hostname, apache.status \| limit 1  \| map \"tag:sample04061424 hostname:$hostname$ apache.status:>$apache.status$ \| stats count()\" |
      | map_rename_status | tag:sample04061424 \| table apache.status, apache.method \| limit 1 \| rename apache.status as status \| map \"apache.status:$status$ apache.method:$apache.method$ tag:sample04061424 \| stats count() \" |
      | map_rename_opt_stats | tag:sample04061424 \| table apache.status, apache.method \| limit 1 \| rename apache.status as status\| eval opt_name=\"stats\" \| map \"apache.status:$status$ apache.method:$apache.method$ tag:sample04061424 \| $opt_name$ count() \" |
      | map_status_sort | tag:sample04061424 \| table apache.clientip, apache.status \| limit 1 \| map \" tag:sample04061424 apache.clientip:<>$apache.clientip$ apache.status:>$apache.status$ \| table apache.status, apache.clientip \| sort by -apache.status, apache.clientip\" |
      | map_status_sort1 | tag:sample04061424 \| table apache.clientip, apache.status \| limit 1 \| map \" tag:sample04061424 apache.clientip:>$apache.clientip$ apache.status:>$apache.status$ \| table apache.status, apache.clientip \| sort by -apache.status, apache.clientip\" |
      | map_starttime_all | tag:\"sample04061424_chart\" \| stats max(timestamp) as max_time, min(timestamp) as min_time \| eval start_f = formatdate(tolong(min_time-30*1000), \"yyyy-MM-dd:HH:mm:ss\")  \| eval end_f = formatdate(tolong(max_time+360000), \"yyyy-MM-dd:HH:mm:ss\") \| map \" starttime=$start_f$ endtime=$end_f$ tag:sample04061424_chart OR tag:sample04061424_display OR tag:sample04061424_dawn\" \| table tag, apache.clientip, apache.resp_len \| sort by apache.resp_len, apache.clientip |
      | map_opt_count | tag:sample04061424 \| eval txt=\"count\" \| limit 1 \| table txt \| map \" tag:sample04061424 \| stats $txt$(timestamp) \" |
      | map_makeresults | \| makeresults count=1 \| eval app_name=\"appname\" \| map \" tag:sample04061424* \| stats count() as cnt by $app_name$ \| sort by cnt, -$app_name$\" |
      | mvexpand_sample | tag:json_jpath0 \| mvexpand json.a \| table json.a |
      | mvexpand_limit | tag:json_jpath0 \| mvexpand json.a \| limit 2 \| table json.a |
      | mvcombine_sample | tag:sample04061424* apache.clientip:* \| table tag, appname, apache.clientip \| limit 10 \| mvcombine apache.clientip |
      | mvcombine_rename_stats_combine_resplenip | index=* tag:sample04061424 \| rename apache.resp_len as ret_resp_len \| stats count() as cnt by apache.clientip, ret_resp_len \| sort by cnt \| mvcombine sep=\" \" ret_resp_len \| mvcombine sep=\",\" apache.clientip |
      | mv_jpath_sample | tag:json_jpath0 \| jpath output=x path=\"a[*][2]\" \| stats sum(x) |
      | mv_jpath_mvzip | tag:json_jpath_mv_where \| jpath output=city path=\"a[*].city\" \| jpath output=status path=\"a[*].status\" \| eval x=mvzip(city,status) \| table x |
      | mv_jpath_mvzip_string | tag:jpath_mvzip_1 \| jpath output=city path=\"a[*].city\" \| jpath output=street path=\"a[*].street\" \| eval ret_mvzip=mvzip(city, street) \| table ret_mvzip |
      | mv_jpath_mvexpand_where | tag:json_jpath_mv_where \| jpath output=city path=\"a[*].city\" \| jpath output=status path=\"a[*].status\" \| eval x=mvszip(city,status) \| mvexpand x \| parse field=x \"(?<ccc>\w+),(?<ddd>\d+)\"  \| where ccc==\"beijing\" \| stats count() by ddd |
      | search_all_samepre_tag_count | index=* starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424* \| top 100 tag \| sort by count,tag |
      | search_all_nopre_tag_count | index=* starttime=\"now/d\" endtime=\"now/d+24h\" NOT tag:sample04061424* \| top 10 tag \| sort by tag |
      | download_after_chart_cnt_clientip_bystatus_csv | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424_chart \| chart count() over apache.clientip by apache.status \| download filename=\"csv_cnt_clientip_bystatus\" fileformat=\"csv\" |
      | geostats_maxzoomlevel_count_sample | tag:vendors_461 AND vendors.VendorCountry:China* \| geostats latfield=vendors.VendorLatitude longfield=vendors.VendorLongitude maxzoomlevel=1 count(vendors.Weight) \| limit 15 |
      | geostats_maxzoomlevel_count | tag:vendors_461 AND vendors.VendorCountry:China* \| geostats latfield=vendors.VendorLatitude longfield=vendors.VendorLongitude maxzoomlevel=3 count(vendors.Weight) \| limit 15 |
      | geostats_china_maxzoomlevel_count_by_province | tag:vendors_461 AND vendors.VendorCountry:China* \| geostats latfield=vendors.VendorLatitude longfield=vendors.VendorLongitude maxzoomlevel=3 count(vendors.Weight) by vendors.VendorStateProvince \| limit 15 |
      | sub_join_inner1 | tag:sample04061424 \| stats avg(apache.status) by apache.clientip \| join type=inner apache.clientip [[ tag:sample04061424 AND apache.clientip:23.166.125.53 \| stats sum(apache.status) by apache.clientip ]] |
      | sub_join_inner2 | tag:sample04061424 \| stats avg(apache.status) by apache.clientip \| join type=inner apache.clientip [[ tag:sample04061424 AND apache.clientip:23.166.125.53 \| stats sum(apache.status) by apache.clientip ]] |
      | sub_join_left | tag:sample04061424 \| stats count(logtype) as count_all by apache.geo.isp \| sort by count_all,apache.geo.isp \| join type=left apache.geo.isp [[tag:sample04061424 AND apache.status:[400 TO 499] \| stats count(logtype) as count_400l by apache.geo.isp]] \| join type=left apache.geo.isp [[tag:sample04061424 AND apache.status:[500 TO 599] \| stats count(logtype) as count_500l by apache.geo.isp]] |
      | sub_join_left1 | tag:sample04061424 \| stats avg(apache.status) by apache.clientip \| sort by apache.clientip \| join type=left apache.clientip [[ tag:sample04061424 AND apache.clientip:23.166.125.53 \| stats sum(apache.status) by apache.clientip ]] |
      | sub_join_left_count_3times | tag:sample04061424 \| stats count(logtype) as count_all by apache.clientip \| sort by count_all, apache.clientip \| limit 20 \| join type=left apache.clientip [[tag:sample04061424 AND apache.status:[400 TO 499] \| stats count(logtype) as count_400l by apache.clientip]] \| join type=left apache.clientip [[tag:sample04061424 AND apache.status:[500 TO 599] \| stats count(logtype) as count_500l by apache.clientip]] \| join type=left apache.clientip [[tag:sample04061424AND apache.resp_len:>1000\| stats count(logtype) as len_1000l by apache.clientip]] \| sort by count_all, apache.clientip |
      | sub_join_percent | tag:sample04061424 \| stats count(logtype) as count_all by apache.clientip \| sort by count_all \| limit 50 \| join type=left apache.clientip [[ tag:sample04061424 AND apache.status:[400 TO 499] \| stats count(logtype) as count_400 by apache.clientip]] \| join type=left apache.clientip [[ tag:sample04061424 AND apache.status:[500 TO 599] \| stats count(logtype) as count_500 by apache.clientip ]] \| join type=left apache.clientip [[tag:sample04061424 AND apache.resp_len:>1000 \| stats count(logtype) as len_1000 by apache.clientip]] \| eval rate_400=if(empty(count_400),0,count_400/count_all) \| eval rate_500=if(empty(count_500),0,count_500/count_all) \| eval rate_len_1000=if(empty(len_1000),0,len_1000/count_all) \| sort by count_all, apache.clientip |
      | sub_multi | starttime = \"now/d\" endtime = \"now\" tag:sample04061424_rizhiyi_access_1000 AND (apache.clientip:1.197.41.37 OR  apache.clientip:123.150.214.81) \| append [[tag:sample04061424 apache.status:200 AND apache.method:\"GET\" AND apache.clientip:\"49.85.230.247\" \| append [[tag:sample04061424 \| stats count() as cnt by apache.status]]]] \| sort by cnt, apache.status |
      | sub_nest_1 | tag:sample04061424 \| stats dc(apache.status) as dc_count by apache.method \| join apache.method [[ tag:sample04061424 \| stats count(apache.status) as cnt by apache.method \| append [[ tag:sample04061424 \| stats count() as total ]] ]] |
      | where_in_resp_len_sample | tag:sample04061424 \| table apache.resp_len,apache.x_forward \| where in(apache.resp_len, 1955,1954,1953,1952) |
      | where_in_resp_len_sample_format2 | tag:sample04061424 \| table apache.resp_len,apache.x_forward \| where apache.resp_len in (1955,1954,1953,1952) |
      | eval_in_resp_len_sample | tag:sample04061424 \| eval is_in = in(apache.resp_len, 1955,1954,1953,1952) \| table apache.resp_len, is_in, apache.x_forward \| sort by apache.x_forward \| limit 10 |
      | eval_in_if_not_resp_len | tag:sample04061424 \| eval is_in_if = if(in(apache.resp_len, 1955,1954,1953,1952), true, false) \| eval no_is_in_if = ! is_in_if \| table apache.resp_len, is_in_if, no_is_in_if, apache.x_forward \| sort by apache.x_forward \| limit 10 |
      | stats_math_sort_limit_eval | (logtype:apache AND tag:sample04061424) \| stats count(tag) as event_count,sum(apache.resp_len) as sum_len,max(apache.resp_len) as max_len,min(apache.resp_len) as min_len by apache.clientip\|sort by sum_len \| limit 5 \| eval agv_len=if(event_time==0,0,sum_len/event_time) |
      | stats_count_eval | tag:sample04061424 \| stats count() as count_ by appname, logtype \| eval test_eval=appname |
      | stats_extend_stat | tag:sample04061424 \| stats extend_stat(apache.resp_len) |
      | stats_arith_by_city | tag:sample04061424 \| stats count(apache.status), max(apache.status), min(apache.resp_len), sum(apache.status), avg(apache.status) by apache.clientip \| sort by apache.clientip |
      | stats_top | tag:sample04061424 \| stats top(apache.status,3) |
      | stats_hg | tag:sample04061424 \| stats hg(apache.status,50) |
      | stats_pct | tag:sample04061424 \| stats pct(raw_message_length,1,5,25,50,75,95,99) |
      | stats_math_1 | tag:sample04061424 \| stats count(apache.status) as cnt, min(apache.status),max(apache.status),avg(apache.status),sum(apache.status), es(apache.status) by apache.clientip \| sort by cnt, apache.clientip |
      | stats_math_2 | tag:sample04061424 \| stats count(apache.status) as cnt, min(apache.status),max(apache.status),avg(apache.status),sum(apache.status), extend_stat(apache.status) by apache.clientip \| sort by cnt, apache.clientip |
      | stats_count | tag:sample04061424 \| stats count() as cnt by apache.status \| sort by cnt, apache.status |
      | stats_sort | tag:sample04061424 \| sort by +apache.status,+apache.resp_len\| table apache.status, apache.resp_len |
      | stats_sort_true | tag:sample04061424 \| stats avg(apache.resp_len) as avg_length by apache.status \| eval eval_length = avg_length + 200 \| sort by eval_length |
      | stats_avg_count_sort | tag:sample04061424 \| stats avg(apache.resp_len) as avg_length, count(apache.clientip) as ip_count by apache.status \| sort by ip_count, apache.status |
      | stats_stats_avg | tag:sample04061424 \| stats count() as cnt, max(apache.status) as r_max by apache.clientip \| stats avg(cnt) by  r_max |
      | stats_stats_top | tag:sample04061424 \| stats count() as cnt, max(apache.status) as r_max by apache.clientip \| top 3 cnt |
      | top_1_resp_len | tag:sample04061424 \| top 50 apache.resp_len \| sort by count, apache.resp_len |
      | top_2_clientip_by_path | tag:sample04061424 \| top 20 apache.clientip by apache.request_path \| sort by count, apache.request_path, apache.clientip |
      | command_limit_mul_stats | tag:sample04061424 \| stats count() as cnt, max(apache.status) as r_max by apache.clientip \| stats max(cnt),max(r_max) |
      | command_limit_mul_top | tag:sample04061424 \| stats count() as cnt, max(apache.status) as r_max_status by apache.clientip \| top 3 r_max_status |
      | bucket_stats_eval_where | starttime=\"now/d\" endtime=\"now/d+7h\" tag:sample04061424_apachesample_dawn \| bucket timestamp span=10m as ts\|stats count(appname) as count_app by ts\|eval time=formatdate(ts,\"HH:mm:ss\") \| autoregress count_app p=6\|eval rate=if(empty(count_app_p6),0,abs(count_app_p6-count_app)) \| eval result=if(empty(count_app_p6),0,1) \|where result>0\|fields count_app,time,count_app_p6,rate |
      | bucket_timeranges_24h | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424_apachesample_dawn \| bucket timestamp timeranges=((MIN,-48h),(-48h,-24h),(-24h,MAX)) as ret_timeranges \| table ret_timeranges |
      | bucket_timeranges_count | starttime=\"now/d\" endtime=\"now\" tag:sample04061424 \| bucket timestamp timeranges=((-2d, -1d),(-1d, MAX),(2017-02-17:00:00:00, 2018-02-23:00:00:00)) as tr \| stats count(appname) as ct by tr |
      | where_dc | tag:sample04061424 \| where apache.status>400 \| stats dc(apache.status) |
      | where_es | tag:sample04061424 \| where apache.status>400 \| stats es(apache.status) |
      | where_logic_and | tag:sample04061424 \| where  apache.status > 200 && apache.status < 400 \| table apache.status |
      | autoregress1 | starttime=\"now/d\" endtime=\"now/d+13h\" tag:sample04061424_apachesample_dawn \| bucket timestamp span=10m as ts \| stats count(appname) as count_app by ts\|eval time=formatdate(ts,\"HH:mm:ss\") \| autoregress count_app p=6\|eval rate=if(empty(count_app_p6),0,abs(count_app_p6-count_app)) \| eval result=if(empty(count_app_p6),0,1) \| where result>0\|fields count_app,time,count_app_p6,rate |
      | autoregress_2 | tag:sample04061424 \| eval  avg_resp_len = apache.resp_len \| autoregress avg_resp_len p=1-2 \| eval res_avg = (avg_resp_len + avg_resp_len_p2 + avg_resp_len_p1) / 3 \| top 3 res_avg |
      | bucket_ranges_status_count | (logtype:apache AND tag:sample04061424) \| bucket apache.status ranges=((0, 200), (200, 300), (300, MAX)) as rs \| stats count(apache.status) as count_status by rs |
      | bucket_stats_autoregress_eval_where_fields | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424_chart \| bucket timestamp span=1h as ts \| stats count(appname) as count_app by ts \| eval time=formatdate(ts,\"HH:mm:ss\") \| autoregress count_app p=6 \| eval rate=if(empty(count_app_p6),0,abs(count_app_p6-count_app)) \| eval result=if(empty(count_app_p6),0,1) \| where result>0 \| fields count_app,time,count_app_p6,rate,result |
      | start_time_para_day | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424 \| stats count(apache.resp_len) as event_count, max(apache.resp_len) as max_len, avg(apache.resp_len) as avg_status |
      | tran_count_apachelen | tag:sample04061424 \| transaction apache.resp_len \| stats count(apache.resp_len) |
      | tran_stats_cmd_limit | tag:sample04061424 \| transaction apache.status, apache.method \| stats count() as cnt |
      | tran_with_stats_fromstate_tostate | tag:\"t_with\" \| transaction json.sid keepevicted=true with states a, b, c in json.module results by flow \| stats count() by fromstate, tostate |
      | bug_tran_bucket_stats | index=* tag:sample04061424 \| transaction apache.status maxevents=10 \| bucket apache.status span=100 as ts \| stats avg(apache.status) as base_len, count() as base_count, es(apache.status) by ts |
      | subs3 | logtype:apache AND (tag:sample04061424_display OR tag:sample04061424_chart) AND [[ tag:sample04061424 \| stats count(apache.method) as method_count by apache.method \|  sort by method_count \| limit 1 \| fields apache.method]] \| table apache.x_forward, apache.request_path \| sort by apache.x_forward |
      | mindex_append_stats | index=* starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424_display \| stats count(apache.clientip)  \| append [[ index=* starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424_chart \| stats count(apache.clientip) ]] |
      | first_top_resp_len | tag:sample04061424 \| top 50 apache.resp_len by apache.status \| stats first(apache.resp_len) |
      | last_sort_resp_len | tag:sample04061424 AND apache.resp_len:* \| sort by +apache.status,+apache.resp_len \| table apache.status, apache.resp_len \| stats last(apache.resp_len) |
      | first_limit_fields | tag:sample04061424\| limit 10 \| fields apache.resp_len \| stats first(apache.resp_len) |
      | last_count_field | tag:sample04061424 \| stats count() as count_res by appname,apache.clientip \| fields apache.clientip, count_res \| sort by count_res, apache.clientip \| stats last(apache.clientip) |
      | first_split | tag:sample04061424 \| eval m_ips=split(apache.clientip, \".\") \| eval m_paths=split(apache.request_path, \"/\") \| table m_ips \| stats first(m_ips) |
      | last_name_mvappend | tag:sample04061424 \| eval fullName=mvappend(apache.clientip, \"middle value\", apache.method) \| table apache.clientip, apache.method,fullName \| stats last(fullName) |
      | last_split_ip_mvsort | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424 \| eval m_ips=split(apache.clientip, \".\") \| eval r_mvsort=mvsort(m_ips) \| table r_mvsort \| stats last(r_mvsort) |
      | first_sub_mvzip | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424 \| eval m_ips=split(apache.clientip, \".\") \| eval m_paths=split(apache.request_path, \"/\") \| eval r_zips = mvzip(m_ips,m_paths) \| eval zips_count = mvcount(r_zips) \| table m_ips, m_paths, r_zips, zips_count \| limit 1 \| stats first(r_zips) |
      | first_mvrange_base | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424 \| eval base=mvrange(1,6) \| table base \| stats first(base) |
      | append_stats_sub | tag:sample04061424 \| stats count(apache.clientip)  \| append [[ index=*  tag:sample04061424 \| stats count(apache.clientip) ]] |
      | group_size_count | tag:sample04061424 AND apache.resp_len:*  \| stats count() as cnt, max(apache.resp_len) as r_max by apache.clientip \| top 3 cnt \| stats last(cnt) |
      | group_size_max | tag:sample04061424 AND apache.resp_len:* \| stats count() as cnt, max(apache.resp_len) as r_max by apache.clientip \| top 3 r_max \| stats last(r_max) |
      | append_status_sub_eval | starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424_apachesample_dawn \| stats avg(apache.resp_len) \| eval day=\"the group dawn\" \| append  [[ starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424_display \| stats avg(apache.resp_len) \| eval day=\"the group display\" \| append [[ starttime=\"now/d\" endtime=\"now/d+24h\" tag:sample04061424_chart \| stats avg(apache.resp_len) \| eval day=\"the group chart\" ]] ]] |
      | tracing_mvszip_mvexpand_parse                 | tag:gf_dapper* AND 'tag':gf_dapper_mould_3 \| eval aa=mvszip(mvszip(dapper.msg.annotations[].endpoint.serviceName,dapper.msg.annotations[].timestamp),dapper.msg.annotations[].value)\|mvexpand aa\|parse field=aa \"(?<aname>[^,]*),(?<atime>[^,]*),(?<avalue>\\\\S+)\"\|sort by +atime \| table atime,dapper.msg.name,dapper.msg.traceId,dapper.msg.parentId,dapper.msg.id,dapper.msg.duration,aname,avalue,dapper.msg.binaryAnnotations[].endpoint.serviceName,dapper.msg.binaryAnnotations[].key,dapper.msg.binaryAnnotations[].value\|rename dapper.time as time,dapper.mtype as mtype,dapper.msg.name as fundname,dapper.msg.traceId as traceId,dapper.msg.parentId as parentId,dapper.msg.id as id,dapper.msg.duration as duration,dapper.msg.binaryAnnotations[].endpoint.serviceName as daname,dapper.msg.binaryAnnotations[].key as dakey,dapper.msg.binaryAnnotations[].value as davalue\|eval time=formatdate(tolong(substring(tostring(atime),0,13)))\|fields time,fundname,traceId,parentId,id,duration,aname,avalue,daname,dakey,davalue |
      | geostats_china_maxzoomlevel_count_by_province | tag:vendors_461 AND vendors.VendorCountry:China* \| geostats latfield=vendors.VendorLatitude longfield=vendors.VendorLongitude maxzoomlevel=3 count(vendors.Weight) by vendors.VendorStateProvince|
      | makeresults_sample                            | \| makeresults count = 1 \| eval tag = \"sample04061424\" \| map \"starttime=\"now/d\" endtime=\"now/d+24h\" tag:$tag$ \| table apache.status, apache.resp_len,apache.clientip \| sort by apache.status, apache.resp_len,apache.clientip|
      | rename_multi_fields_apache_plus               | tag:sample04061424 \| rename apache.geo.* as *, apache.r* as r*, apache.clientip as clientip \| table r*,clientip \| sort by resp_len, clientip, request_query                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          |
      | parse_digital_max_match100                    | tag:sample04061424 AND  apache.x_forward:1\| parse \"(?<digital_list>\\\\d+)\" max_match=100 \|  table digital_list, apache.x_forward|
      | parse_chinese_char_maxmatch100_exceed_rawlen  | tag:sample04061424_chinese_5 \| limit 1 \| parse field=raw_message \"(?<first_chinese_char>[\\\\u4e00-\\\\u9fa5])\" max_match=100 \| table first_chinese_char|
      | eval_match_query                              | tag:\"sample04061424\" AND apache.request_query:* \| eval r_match1 = match(apache.request_query, \"b.*e\") \| eval r_match2 = match(apache.request_query, \"^bcd\") \| table apache.request_query, r_match1, r_match2, apache.x_forward \| sort by  apache.x_forward                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    |
      | parse_to_table                                | tag:sample04061424 \| parse \"(?<digital_list>\\\\d+)\" max_match=5 \| table digital_list, apache.x_forward \| sort by  apache.x_forward                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |
      | geostats_maxzoomlevel_count_sample            | tag:vendors_461 AND vendors.VendorCountry:China* \| geostats latfield=vendors.VendorLatitude longfield=vendors.VendorLongitude maxzoomlevel=1 count(vendors.Weight|
      | geostats_maxzoomlevel_count                   | tag:vendors_461 AND vendors.VendorCountry:China* \| geostats latfield=vendors.VendorLatitude longfield=vendors.VendorLongitude maxzoomlevel=3 count(vendors.Weight|
      | geostats_maxzoomlevel_count_by_province       | tag:vendors_461 \| geostats latfield=vendors.VendorLatitude longfield=vendors.VendorLongitude maxzoomlevel=3 count(vendors.Weight) by vendors.VendorStateProvince|
      | spl_rangeline_outlier_is_0                    | tag:sample04061424_display \| bucket timestamp span=3h as ts\| stats count(appname) as count_ by ts\| movingavg count_,5 as ma\| rollingstd count_,5 as rs \| eval lower=ma-3*rs \| eval upper=ma+3*rs\| eval outlier=if(count_>upper\|\|count_<lower, count|
      | search_four_divide_five_makersult             | \| makeresults count = 10 \| eval a=4/5 \| table a|
